
cherry-pick
===========
git checkout master
git cherry-pick 62ecb3
Ref: https://ariejan.net/2010/06/10/cherry-picking-specific-commits-from-another-branch/

show
====
git show ef3f10
git show --name-only ef3f10
git diff-tree --no-commit-id --name-only -r ef3f10
git show --pretty="format:" --name-only ef3f10

The --no-commit-id suppresses the commit ID output.
The --pretty argument specifies an empty format string to avoid the cruft at the beginning.
The --name-only argument shows only the file names that were affected (Thanks Hank).
The -r argument is to recurse into sub-trees

pushing to git remote branch
============================
git push origin mybranch
pushes to the remote named origin the branch named mybranch

Delete a branch
===============
git push origin :newfeature
That will delete the newfeature branch on the origin remote.

git branch -d newfeature.
Delete the branch locally


Referances
==========
https://education.github.com/git-cheat-sheet-education.pdf

